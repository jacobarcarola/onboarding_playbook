---
- name: Clean up release branches older than 30 days
  hosts: localhost
  connection: local
  gather_facts: false

  # Ideally, we want to remove branches that are timestamped
  # and older than 30 days. There is no real benefit in
  # keeping them around.

  vars:
    github_token: "{{ lookup('ansible.builtin.env', 'GITHUB_TOKEN', default='') }}"
    user: "{{ lookup('ansible.builtin.env', 'USER', default='aoc-saas-bot' ) }}"
    github_organization: "jacobarcarola"
    repository_base_url: "https://api.github.com/repos/{{ github_organization }}"
    max_age: 30
    current_date: "{{ now(utc=true, fmt='%Y-%m-%d') | to_datetime('%Y-%m-%d') }}"
    release_branch_pattern: "^v[0-9]{4}-[0-9]{2}-[0-9]{2}.*"

    repos:
      - "repo1"
      - "repo2"

    # repo1 has the following branches: main, unformatted-test-branch, v2024-08-20-b98, v2024-09-06-b99, v2024-09-18-b100, v2024-09-20-b101
    # repo2 has the following branches: main, newbranch, testbranchnoformat, v2024-07-06-b123091, v2024-08-19-b112390, v2024-09-03-b12313

  tasks:
    - name: Create variable to hold headers for each API call
      ansible.builtin.set_fact:
        headers:
          Authorization: token {{ github_token }}
          X-GitHub-Api-Version: "2022-11-28"
          Accept: application/vnd.github+json

    - name: Get all branches from repo1
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ github_organization }}/repo1/branches"
        headers: "{{ headers }}"
        method: GET
        return_content: true
      register: branches

    - name: Print the current date
      ansible.builtin.debug:
        msg: "Today's date is: {{ current_date }}"

    - name: Print branches from repo1
      ansible.builtin.debug:
        msg: "Branches: {{ branches.json | map(attribute='name') | list }}"

    - name: Obtain a list of release branches with YYYY-MM-DD dates
      ansible.builtin.set_fact:
        release_branches: "{{ branches.json | map(attribute='name') | map('regex_search', release_branch_pattern) | select('string') }}"

    - name: Print release branches
      ansible.builtin.debug:
        msg: "Release branches: {{ release_branches }}"

    - name: Compare and create list of old releases
      ansible.builtin.debug:
        msg: "{{ item | map('regex_replace', 'v', '') | map('regex_replace', '-[a-z].*$', '') }}"
      loop: "{{ release_branches }}"
      # when: (current_date - (item | map('regex_replace', 'v', '') | map('regex_replace', '-[a-z].*$', '') | to_datetime('%Y-%m-%d'))) > 30

    # - name: Create empty list
    #   ansible.builtin.set_fact:
    #     date_comparisons: []

    # - name: Format release branches into datetime objects
    #   ansible.builtin.set_fact:
    #     formatted_branches: "{{ release_branches
    #                             | map('regex_replace', 'v', '')
    #                             | map('regex_replace', '-[a-z].*$', '')
    #                             | list }}"

    # - name: Print formatted branches
    #   ansible.builtin.debug:
    #     msg: "Branches: {{ formatted_branches | type_debug }}"

    # - name: Print release branches older than 30 days
    #   ansible.builtin.debug:
    #     msg: "Branches older than 30 days: {{ date_comparisons }}"
